function P({onDown:n,onMove:c,onUp:u,options:i}){return t=>{if(t.button!==0)return;const l=t.currentTarget,a=n==null?void 0:n(t);let r;const f=e=>{e instanceof PointerEvent&&a!==!1&&(e.preventDefault(),c==null||c(e,a,{dx:e.clientX-t.clientX,dy:e.clientY-t.clientY,deltaX:e.clientX-((r==null?void 0:r.clientX)??t.clientX),deltaY:e.clientY-((r==null?void 0:r.clientY)??t.clientY)}),r=e)},s=e=>{e instanceof PointerEvent&&a!==!1&&(l.removeEventListener("pointermove",f),window.removeEventListener("pointerup",s),(i==null?void 0:i.disableCapture)!==!0&&l.releasePointerCapture(e.pointerId),u==null||u(e,a,r))};a!==!1&&((i==null?void 0:i.disableCapture)!==!0&&l.setPointerCapture(t.pointerId),l.addEventListener("pointermove",f,{passive:!1}),window.addEventListener("pointerup",s))}}export{P as c};

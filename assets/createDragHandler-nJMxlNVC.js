function X({onDown:l,onMove:c,onUp:n,options:r}){return t=>{if(t.button!==0)return;const u=t.currentTarget,a=l==null?void 0:l(t);let i;const f=r!=null&&r.pointerMoveOnWindow?window:u,d=e=>{e instanceof PointerEvent&&a!==!1&&(e.preventDefault(),c==null||c(e,a,{dx:e.clientX-t.clientX,dy:e.clientY-t.clientY,deltaX:e.clientX-((i==null?void 0:i.clientX)??t.clientX),deltaY:e.clientY-((i==null?void 0:i.clientY)??t.clientY)}),i=e)},s=e=>{e instanceof PointerEvent&&a!==!1&&(f.removeEventListener("pointermove",d),window.removeEventListener("pointerup",s),(r==null?void 0:r.disableCapture)!==!0&&u.releasePointerCapture(e.pointerId),n==null||n(e,a,i))};a!==!1&&((r==null?void 0:r.disableCapture)!==!0&&u.setPointerCapture(t.pointerId),f.addEventListener("pointermove",d,{passive:!1}),window.addEventListener("pointerup",s))}}export{X as c};
